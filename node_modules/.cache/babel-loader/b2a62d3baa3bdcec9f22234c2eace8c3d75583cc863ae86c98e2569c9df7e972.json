{"ast":null,"code":"var _jsxFileName = \"D:\\\\proj\\\\CampusHive\\\\client\\\\src\\\\components\\\\RegisteredEvents.js\",\n  _s = $RefreshSig$();\nimport Axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisteredEvents(_ref) {\n  _s();\n  let {\n    userid\n  } = _ref;\n  const [registeredList, setRegisteredlist] = useState([]);\n  useEffect(() => {\n    Axios.post('http://localhost:3001/getRegisteredList', {\n      userid: userid\n    }).then(res => {\n      if (res.data) {\n        setRegisteredlist(res.data);\n      }\n    });\n  }, [userid, setRegisteredlist]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: registeredList.map(ele => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisteredEvents, \"nZr7ZmJd5qMpK0vPdoDF9qZ1Lh4=\");\n_c = RegisteredEvents;\nexport default RegisteredEvents;\nvar _c;\n$RefreshReg$(_c, \"RegisteredEvents\");","map":{"version":3,"names":["Axios","React","useEffect","useState","jsxDEV","_jsxDEV","RegisteredEvents","_ref","_s","userid","registeredList","setRegisteredlist","post","then","res","data","children","map","ele","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/proj/CampusHive/client/src/components/RegisteredEvents.js"],"sourcesContent":["import Axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nfunction RegisteredEvents({userid}) {\r\n    const [registeredList, setRegisteredlist] = useState([]);\r\n    useEffect(()=>{\r\n        Axios.post('http://localhost:3001/getRegisteredList',{\r\n            userid:userid\r\n        })\r\n        .then((res)=>{\r\n            if (res.data){\r\n                setRegisteredlist(res.data);\r\n            }\r\n        })\r\n    },[userid,setRegisteredlist]);\r\n  return (\r\n    <div>\r\n        {\r\n            registeredList.map((ele)=>{\r\n                return (\r\n                    <div>\r\n                        {/* <div>{ele.event.ename}</div> */}\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegisteredEvents"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,gBAAgBA,CAAAC,IAAA,EAAW;EAAAC,EAAA;EAAA,IAAV;IAACC;EAAM,CAAC,GAAAF,IAAA;EAC9B,MAAM,CAACG,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxDD,SAAS,CAAC,MAAI;IACVF,KAAK,CAACY,IAAI,CAAC,yCAAyC,EAAC;MACjDH,MAAM,EAACA;IACX,CAAC,CAAC,CACDI,IAAI,CAAEC,GAAG,IAAG;MACT,IAAIA,GAAG,CAACC,IAAI,EAAC;QACTJ,iBAAiB,CAACG,GAAG,CAACC,IAAI,CAAC;MAC/B;IACJ,CAAC,CAAC;EACN,CAAC,EAAC,CAACN,MAAM,EAACE,iBAAiB,CAAC,CAAC;EAC/B,oBACEN,OAAA;IAAAW,QAAA,EAEQN,cAAc,CAACO,GAAG,CAAEC,GAAG,IAAG;MACtB,oBACIb,OAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEK,CAAC;IAEd,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEV;AAACd,EAAA,CAzBQF,gBAAgB;AAAAiB,EAAA,GAAhBjB,gBAAgB;AA2BzB,eAAeA,gBAAgB;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}