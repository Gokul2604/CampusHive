{"ast":null,"code":"var _jsxFileName = \"D:\\\\proj\\\\CampusHive\\\\client\\\\src\\\\components\\\\VerifyEvents.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VerifyEvents() {\n  _s();\n  const [toVerifylist, setToverifylist] = useState([]);\n  useEffect(() => {\n    Axios.get('http://localhost:3001/getNoneVerifiedEvents').then(res => {\n      setToverifylist(res.data);\n    }).catch(err => {\n      to(err);\n    });\n  }, [setToverifylist]);\n  const handleVerifyIt = eventid => {\n    Axios.post('http://localhost:3001/verifyEvent', {\n      eventid: eventid\n    }).then(res => {\n      if (res.data === \"Success\") {\n        alert(\"Verified...\");\n      } else if (res.data === \"Error\") {\n        alert(\"Error in Verifying...\");\n      }\n    });\n  };\n  const navigate = useNavigate();\n  const userid = 'admin';\n  const handleEventCheck = event => {\n    navigate('/event', {\n      state: {\n        userid,\n        event\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: toVerifylist.map(ele => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"one-event\",\n          onClick: () => handleEventCheck(ele),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: ele.ename\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: ele.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: ele.edate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"editbtn\",\n            onClick: () => handleVerifyIt(ele.eventid),\n            children: \"Verify\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this)]\n        }, ele.eventid, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      autoClose: 2000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(VerifyEvents, \"SrvqJ04paYbALInt8zw+Jb9ZTEc=\", false, function () {\n  return [useNavigate];\n});\n_c = VerifyEvents;\nexport default VerifyEvents;\nvar _c;\n$RefreshReg$(_c, \"VerifyEvents\");","map":{"version":3,"names":["React","useEffect","useState","Axios","useNavigate","ToastContainer","toast","jsxDEV","_jsxDEV","VerifyEvents","_s","toVerifylist","setToverifylist","get","then","res","data","catch","err","to","handleVerifyIt","eventid","post","alert","navigate","userid","handleEventCheck","event","state","children","map","ele","className","onClick","ename","fileName","_jsxFileName","lineNumber","columnNumber","desc","edate","autoClose","_c","$RefreshReg$"],"sources":["D:/proj/CampusHive/client/src/components/VerifyEvents.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction VerifyEvents() {\r\n    const [toVerifylist,setToverifylist] = useState([]);\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:3001/getNoneVerifiedEvents')\r\n        .then((res)=>{\r\n            setToverifylist(res.data);\r\n        })\r\n        .catch((err)=>{\r\n            to(err);\r\n        })\r\n    }, [setToverifylist]);\r\n    const handleVerifyIt = (eventid) => {\r\n        Axios.post('http://localhost:3001/verifyEvent',{\r\n            eventid:eventid\r\n        })\r\n        .then((res)=>{\r\n            if (res.data === \"Success\"){\r\n                alert(\"Verified...\");\r\n            } else if (res.data === \"Error\"){\r\n                alert(\"Error in Verifying...\");\r\n            }\r\n        })\r\n    }\r\n    const navigate = useNavigate();\r\n    const userid = 'admin';\r\n    const handleEventCheck = (event) => {\r\n        navigate('/event',{state:{userid,event}});\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                {\r\n                    toVerifylist.map((ele)=>{\r\n                        return(\r\n                            <div key={ele.eventid} className='one-event' onClick={() => handleEventCheck(ele)}>\r\n                                <h3>{ele.ename}</h3>\r\n                                <div>{ele.desc}</div>\r\n                                <div>{ele.edate}</div>\r\n                                <button className='editbtn' onClick={() => handleVerifyIt(ele.eventid)}>Verify</button>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <ToastContainer autoClose={2000} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VerifyEvents"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}